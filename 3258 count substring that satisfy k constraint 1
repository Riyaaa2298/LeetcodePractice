class Solution {
public:
    int countKConstraintSubstrings(string s, int k) {
        int count=0;
        for(int i = 0;i<s.size();i++)
        {
            for(int j=i;j<s.size();j++)
            {
                int val = countcons(s,i,j,k);
                count = count + val;
                cout<< "count is " << count << endl;
            }
        }
        return count;
        
    }
    int countcons(string s, int start, int end,int k)
    {
        string f = s.substr(start,end-start+1);
       //cout<< f << "the subsyr " << endl;
      // cout << " " << endl;
        unordered_map<char,int>u_map;
        for(int i = 0;i<f.size();i++)
        {
            u_map[f[i]]++;
        }
        
        int x = u_map['1'];
       //cout<< x << "the value of 1" << endl;
        int y = u_map['0'];
       // cout<< y << "the value of 0" << endl;
        if((x<=k) || (y<=k))
        {
           // cout<< " yes " << endl;
            return 1;
        }
        else
        {
            return 0;
        }
    }
};
